; ModuleID = 'LFortran'
source_filename = "LFortran"

%shape = type <{ i32 (...)** }>
%string_descriptor = type <{ i8*, i64 }>
%circle = type <{ %shape, float }>
%rectangle = type <{ %shape, float, float }>

@_Name_shape = private unnamed_addr constant [6 x i8] c"shape\00", align 1
@_Type_Info_shape = linkonce_odr unnamed_addr constant { i8*, i8* } { i8* getelementptr inbounds ([6 x i8], [6 x i8]* @_Name_shape, i32 0, i32 0) }, align 8
@_VTable_shape = linkonce_odr unnamed_addr constant { [3 x i8*] } { [3 x i8*] [i8* null, i8* @_Type_Info_shape, i8* null] }, align 8
@_Name_circle = private unnamed_addr constant [7 x i8] c"circle\00", align 1
@_Type_Info_circle = linkonce_odr unnamed_addr constant { i8*, i8* } { i8* getelementptr inbounds ([7 x i8], [7 x i8]* @_Name_circle, i32 0, i32 0), i8* bitcast ({ i8*, i8* }* @_Type_Info_shape to i8*) }, align 8
@_VTable_circle = linkonce_odr unnamed_addr constant { [3 x i8*] } { [3 x i8*] [i8* null, i8* @_Type_Info_circle, i8* bitcast (float (%circle*)* @__module_select_type_13_module_circle_area to i8*)] }, align 8
@_Name_rectangle = private unnamed_addr constant [10 x i8] c"rectangle\00", align 1
@_Type_Info_rectangle = linkonce_odr unnamed_addr constant { i8*, i8* } { i8* getelementptr inbounds ([10 x i8], [10 x i8]* @_Name_rectangle, i32 0, i32 0), i8* bitcast ({ i8*, i8* }* @_Type_Info_shape to i8*) }, align 8
@_VTable_rectangle = linkonce_odr unnamed_addr constant { [3 x i8*] } { [3 x i8*] [i8* null, i8* @_Type_Info_rectangle, i8* bitcast (float (%rectangle*)* @__module_select_type_13_module_rectangle_area to i8*)] }, align 8
@0 = private unnamed_addr constant [2 x i8] c"\0A\00", align 1
@string_const_data = private constant [21 x i8] c"Matched as rectangle\00"
@string_const = private global %string_descriptor <{ i8* getelementptr inbounds ([21 x i8], [21 x i8]* @string_const_data, i32 0, i32 0), i64 20 }>
@1 = private unnamed_addr constant [5 x i8] c"%s%s\00", align 1
@2 = private unnamed_addr constant [2 x i8] c"\0A\00", align 1
@string_const_data.1 = private constant [18 x i8] c"Matched as circle\00"
@string_const.2 = private global %string_descriptor <{ i8* getelementptr inbounds ([18 x i8], [18 x i8]* @string_const_data.1, i32 0, i32 0), i64 17 }>
@3 = private unnamed_addr constant [5 x i8] c"%s%s\00", align 1
@4 = private unnamed_addr constant [2 x i8] c"\0A\00", align 1
@serialization_info = private unnamed_addr constant [3 x i8] c"R4\00", align 1
@5 = private unnamed_addr constant [5 x i8] c"%s%s\00", align 1
@string_const_data.3 = private constant [11 x i8] c"ERROR STOP\00"
@string_const.4 = private global %string_descriptor <{ i8* getelementptr inbounds ([11 x i8], [11 x i8]* @string_const_data.3, i32 0, i32 0), i64 10 }>
@string_const_data.5 = private constant [2 x i8] c"\0A\00"
@string_const.6 = private global %string_descriptor <{ i8* getelementptr inbounds ([2 x i8], [2 x i8]* @string_const_data.5, i32 0, i32 0), i64 1 }>
@6 = private unnamed_addr constant [5 x i8] c"%s%s\00", align 1
@7 = private unnamed_addr constant [2 x i8] c"\0A\00", align 1
@string_const_data.7 = private constant [17 x i8] c"Matched as shape\00"
@string_const.8 = private global %string_descriptor <{ i8* getelementptr inbounds ([17 x i8], [17 x i8]* @string_const_data.7, i32 0, i32 0), i64 16 }>
@8 = private unnamed_addr constant [5 x i8] c"%s%s\00", align 1
@9 = private unnamed_addr constant [2 x i8] c"\0A\00", align 1
@string_const_data.9 = private constant [18 x i8] c"Matched as circle\00"
@string_const.10 = private global %string_descriptor <{ i8* getelementptr inbounds ([18 x i8], [18 x i8]* @string_const_data.9, i32 0, i32 0), i64 17 }>
@10 = private unnamed_addr constant [5 x i8] c"%s%s\00", align 1
@11 = private unnamed_addr constant [2 x i8] c"\0A\00", align 1
@string_const_data.11 = private constant [21 x i8] c"Matched as rectangle\00"
@string_const.12 = private global %string_descriptor <{ i8* getelementptr inbounds ([21 x i8], [21 x i8]* @string_const_data.11, i32 0, i32 0), i64 20 }>
@12 = private unnamed_addr constant [5 x i8] c"%s%s\00", align 1
@13 = private unnamed_addr constant [2 x i8] c"\0A\00", align 1
@serialization_info.13 = private unnamed_addr constant [6 x i8] c"R4,R4\00", align 1
@14 = private unnamed_addr constant [5 x i8] c"%s%s\00", align 1
@string_const_data.14 = private constant [11 x i8] c"ERROR STOP\00"
@string_const.15 = private global %string_descriptor <{ i8* getelementptr inbounds ([11 x i8], [11 x i8]* @string_const_data.14, i32 0, i32 0), i64 10 }>
@string_const_data.16 = private constant [2 x i8] c"\0A\00"
@string_const.17 = private global %string_descriptor <{ i8* getelementptr inbounds ([2 x i8], [2 x i8]* @string_const_data.16, i32 0, i32 0), i64 1 }>
@15 = private unnamed_addr constant [5 x i8] c"%s%s\00", align 1
@string_const_data.18 = private constant [11 x i8] c"ERROR STOP\00"
@string_const.19 = private global %string_descriptor <{ i8* getelementptr inbounds ([11 x i8], [11 x i8]* @string_const_data.18, i32 0, i32 0), i64 10 }>
@string_const_data.20 = private constant [2 x i8] c"\0A\00"
@string_const.21 = private global %string_descriptor <{ i8* getelementptr inbounds ([2 x i8], [2 x i8]* @string_const_data.20, i32 0, i32 0), i64 1 }>
@16 = private unnamed_addr constant [5 x i8] c"%s%s\00", align 1
@17 = private unnamed_addr constant [2 x i8] c"\0A\00", align 1
@string_const_data.22 = private constant [17 x i8] c"Matched as shape\00"
@string_const.23 = private global %string_descriptor <{ i8* getelementptr inbounds ([17 x i8], [17 x i8]* @string_const_data.22, i32 0, i32 0), i64 16 }>
@18 = private unnamed_addr constant [5 x i8] c"%s%s\00", align 1

define float @__module_select_type_13_module_circle_area(%circle* %this) {
.entry:
  %circle_area = alloca float, align 4
  %0 = getelementptr %circle, %circle* %this, i32 0, i32 1
  %1 = load float, float* %0, align 4
  %2 = fmul float 0x400921FA00000000, %1
  %3 = getelementptr %circle, %circle* %this, i32 0, i32 1
  %4 = load float, float* %3, align 4
  %5 = fmul float %2, %4
  store float %5, float* %circle_area, align 4
  br label %return

return:                                           ; preds = %.entry
  %6 = load float, float* %circle_area, align 4
  ret float %6
}

define float @__module_select_type_13_module_rectangle_area(%rectangle* %this) {
.entry:
  %rectangle_area = alloca float, align 4
  %0 = getelementptr %rectangle, %rectangle* %this, i32 0, i32 1
  %1 = load float, float* %0, align 4
  %2 = getelementptr %rectangle, %rectangle* %this, i32 0, i32 2
  %3 = load float, float* %2, align 4
  %4 = fmul float %1, %3
  store float %4, float* %rectangle_area, align 4
  br label %return

return:                                           ; preds = %.entry
  %5 = load float, float* %rectangle_area, align 4
  ret float %5
}

define i32 @main(i32 %0, i8** %1) {
.entry:
  call void @_lpython_call_initial_functions(i32 %0, i8** %1)
  %s1 = alloca %shape*, align 8
  %2 = bitcast %shape** %s1 to i32 (...)***
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [3 x i8*] }, { [3 x i8*] }* @_VTable_shape, i32 0, i32 0, i32 2) to i32 (...)**), i32 (...)*** %2, align 8
  %s2 = alloca %shape*, align 8
  %3 = bitcast %shape** %s2 to i32 (...)***
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [3 x i8*] }, { [3 x i8*] }* @_VTable_shape, i32 0, i32 0, i32 2) to i32 (...)**), i32 (...)*** %3, align 8
  %4 = call i8* @_lfortran_malloc(i64 12)
  call void @llvm.memset.p0i8.i32(i8* %4, i8 0, i32 12, i1 false)
  %5 = bitcast i8* %4 to %shape*
  store %shape* %5, %shape** %s1, align 8
  %6 = load %shape*, %shape** %s1, align 8
  %7 = bitcast %shape* %6 to %circle*
  %8 = bitcast %shape* %5 to i32 (...)***
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [3 x i8*] }, { [3 x i8*] }* @_VTable_circle, i32 0, i32 0, i32 2) to i32 (...)**), i32 (...)*** %8, align 8
  %9 = getelementptr %circle, %circle* %7, i32 0, i32 1
  %10 = getelementptr %circle, %circle* %7, i32 0, i32 0
  %11 = load %shape*, %shape** %s1, align 8
  %12 = bitcast %shape* %11 to i8*
  %13 = call i8* @__lfortran_dynamic_cast(i8* %12, i8* bitcast ({ i8*, i8* }* @_Type_Info_rectangle to i8*), i1 false)
  %14 = icmp ne i8* %13, null
  br i1 %14, label %then, label %else

then:                                             ; preds = %.entry
  %15 = load i8*, i8** getelementptr inbounds (%string_descriptor, %string_descriptor* @string_const, i32 0, i32 0), align 8
  call void @_lfortran_printf(i8* getelementptr inbounds ([5 x i8], [5 x i8]* @1, i32 0, i32 0), i8* %15, i32 20, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @0, i32 0, i32 0), i32 1)
  br label %ifcont5

else:                                             ; preds = %.entry
  %16 = load %shape*, %shape** %s1, align 8
  %17 = bitcast %shape* %16 to i8*
  %18 = call i8* @__lfortran_dynamic_cast(i8* %17, i8* bitcast ({ i8*, i8* }* @_Type_Info_circle to i8*), i1 false)
  %19 = icmp ne i8* %18, null
  br i1 %19, label %then1, label %else4

then1:                                            ; preds = %else
  %20 = load i8*, i8** getelementptr inbounds (%string_descriptor, %string_descriptor* @string_const.2, i32 0, i32 0), align 8
  call void @_lfortran_printf(i8* getelementptr inbounds ([5 x i8], [5 x i8]* @3, i32 0, i32 0), i8* %20, i32 17, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @2, i32 0, i32 0), i32 1)
  %21 = load %shape*, %shape** %s1, align 8
  %22 = bitcast %shape* %21 to %circle*
  %23 = getelementptr %circle, %circle* %22, i32 0, i32 1
  store float 1.000000e+01, float* %23, align 4
  %24 = load %shape*, %shape** %s1, align 8
  %25 = bitcast %shape* %24 to %circle*
  %26 = getelementptr %circle, %circle* %25, i32 0, i32 1
  %27 = load float, float* %26, align 4
  %28 = alloca float, align 4
  store float %27, float* %28, align 4
  %29 = call i8* (i8*, i64, i8*, i32, i32, ...) @_lcompilers_string_format_fortran(i8* null, i64 0, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @serialization_info, i32 0, i32 0), i32 0, i32 0, float* %28)
  %30 = call i64 @_lfortran_str_len(i8* %29)
  %31 = call i8* @_lfortran_malloc(i64 16)
  %stringFormat_desc = bitcast i8* %31 to %string_descriptor*
  %32 = getelementptr %string_descriptor, %string_descriptor* %stringFormat_desc, i32 0, i32 0
  store i8* %29, i8** %32, align 8
  %33 = getelementptr %string_descriptor, %string_descriptor* %stringFormat_desc, i32 0, i32 1
  store i64 %30, i64* %33, align 4
  %34 = getelementptr %string_descriptor, %string_descriptor* %stringFormat_desc, i32 0, i32 0
  %35 = load i8*, i8** %34, align 8
  %36 = getelementptr %string_descriptor, %string_descriptor* %stringFormat_desc, i32 0, i32 1
  %37 = load i64, i64* %36, align 4
  %38 = trunc i64 %37 to i32
  call void @_lfortran_printf(i8* getelementptr inbounds ([5 x i8], [5 x i8]* @5, i32 0, i32 0), i8* %35, i32 %38, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @4, i32 0, i32 0), i32 1)
  %39 = load %shape*, %shape** %s1, align 8
  %40 = bitcast %shape* %39 to %circle*
  %41 = getelementptr %circle, %circle* %40, i32 0, i32 1
  %42 = load float, float* %41, align 4
  %43 = fcmp une float %42, 1.000000e+01
  br i1 %43, label %then2, label %else3

then2:                                            ; preds = %then1
  %44 = load i8*, i8** getelementptr inbounds (%string_descriptor, %string_descriptor* @string_const.4, i32 0, i32 0), align 8
  %45 = load i8*, i8** getelementptr inbounds (%string_descriptor, %string_descriptor* @string_const.6, i32 0, i32 0), align 8
  call void (i8*, ...) @_lcompilers_print_error(i8* getelementptr inbounds ([5 x i8], [5 x i8]* @6, i32 0, i32 0), i8* %44, i8* %45)
  call void @exit(i32 1)
  br label %ifcont

else3:                                            ; preds = %then1
  br label %ifcont

ifcont:                                           ; preds = %else3, %then2
  br label %ifcont5

else4:                                            ; preds = %else
  %46 = load i8*, i8** getelementptr inbounds (%string_descriptor, %string_descriptor* @string_const.8, i32 0, i32 0), align 8
  call void @_lfortran_printf(i8* getelementptr inbounds ([5 x i8], [5 x i8]* @8, i32 0, i32 0), i8* %46, i32 16, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @7, i32 0, i32 0), i32 1)
  br label %ifcont5

ifcont5:                                          ; preds = %else4, %ifcont, %then
  %47 = call i8* @_lfortran_malloc(i64 16)
  call void @llvm.memset.p0i8.i32(i8* %47, i8 0, i32 16, i1 false)
  %48 = bitcast i8* %47 to %shape*
  store %shape* %48, %shape** %s2, align 8
  %49 = load %shape*, %shape** %s2, align 8
  %50 = bitcast %shape* %49 to %rectangle*
  %51 = bitcast %shape* %48 to i32 (...)***
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [3 x i8*] }, { [3 x i8*] }* @_VTable_rectangle, i32 0, i32 0, i32 2) to i32 (...)**), i32 (...)*** %51, align 8
  %52 = getelementptr %rectangle, %rectangle* %50, i32 0, i32 1
  %53 = getelementptr %rectangle, %rectangle* %50, i32 0, i32 2
  %54 = getelementptr %rectangle, %rectangle* %50, i32 0, i32 0
  %55 = load %shape*, %shape** %s2, align 8
  %56 = bitcast %shape* %55 to i8*
  %57 = call i8* @__lfortran_dynamic_cast(i8* %56, i8* bitcast ({ i8*, i8* }* @_Type_Info_circle to i8*), i1 false)
  %58 = icmp ne i8* %57, null
  br i1 %58, label %then6, label %else7

then6:                                            ; preds = %ifcont5
  %59 = load i8*, i8** getelementptr inbounds (%string_descriptor, %string_descriptor* @string_const.10, i32 0, i32 0), align 8
  call void @_lfortran_printf(i8* getelementptr inbounds ([5 x i8], [5 x i8]* @10, i32 0, i32 0), i8* %59, i32 17, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @9, i32 0, i32 0), i32 1)
  br label %ifcont17

else7:                                            ; preds = %ifcont5
  %60 = load %shape*, %shape** %s2, align 8
  %61 = bitcast %shape* %60 to i8*
  %62 = call i8* @__lfortran_dynamic_cast(i8* %61, i8* bitcast ({ i8*, i8* }* @_Type_Info_rectangle to i8*), i1 false)
  %63 = icmp ne i8* %62, null
  br i1 %63, label %then8, label %else16

then8:                                            ; preds = %else7
  %64 = load i8*, i8** getelementptr inbounds (%string_descriptor, %string_descriptor* @string_const.12, i32 0, i32 0), align 8
  call void @_lfortran_printf(i8* getelementptr inbounds ([5 x i8], [5 x i8]* @12, i32 0, i32 0), i8* %64, i32 20, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @11, i32 0, i32 0), i32 1)
  %65 = load %shape*, %shape** %s2, align 8
  %66 = bitcast %shape* %65 to %rectangle*
  %67 = getelementptr %rectangle, %rectangle* %66, i32 0, i32 1
  store float 5.000000e+00, float* %67, align 4
  %68 = load %shape*, %shape** %s2, align 8
  %69 = bitcast %shape* %68 to %rectangle*
  %70 = getelementptr %rectangle, %rectangle* %69, i32 0, i32 2
  store float 4.000000e+00, float* %70, align 4
  %71 = load %shape*, %shape** %s2, align 8
  %72 = bitcast %shape* %71 to %rectangle*
  %73 = getelementptr %rectangle, %rectangle* %72, i32 0, i32 1
  %74 = load float, float* %73, align 4
  %75 = alloca float, align 4
  store float %74, float* %75, align 4
  %76 = load %shape*, %shape** %s2, align 8
  %77 = bitcast %shape* %76 to %rectangle*
  %78 = getelementptr %rectangle, %rectangle* %77, i32 0, i32 2
  %79 = load float, float* %78, align 4
  %80 = alloca float, align 4
  store float %79, float* %80, align 4
  %81 = call i8* (i8*, i64, i8*, i32, i32, ...) @_lcompilers_string_format_fortran(i8* null, i64 0, i8* getelementptr inbounds ([6 x i8], [6 x i8]* @serialization_info.13, i32 0, i32 0), i32 0, i32 0, float* %75, float* %80)
  %82 = call i64 @_lfortran_str_len(i8* %81)
  %83 = call i8* @_lfortran_malloc(i64 16)
  %stringFormat_desc9 = bitcast i8* %83 to %string_descriptor*
  %84 = getelementptr %string_descriptor, %string_descriptor* %stringFormat_desc9, i32 0, i32 0
  store i8* %81, i8** %84, align 8
  %85 = getelementptr %string_descriptor, %string_descriptor* %stringFormat_desc9, i32 0, i32 1
  store i64 %82, i64* %85, align 4
  %86 = getelementptr %string_descriptor, %string_descriptor* %stringFormat_desc9, i32 0, i32 0
  %87 = load i8*, i8** %86, align 8
  %88 = getelementptr %string_descriptor, %string_descriptor* %stringFormat_desc9, i32 0, i32 1
  %89 = load i64, i64* %88, align 4
  %90 = trunc i64 %89 to i32
  call void @_lfortran_printf(i8* getelementptr inbounds ([5 x i8], [5 x i8]* @14, i32 0, i32 0), i8* %87, i32 %90, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @13, i32 0, i32 0), i32 1)
  %91 = load %shape*, %shape** %s2, align 8
  %92 = bitcast %shape* %91 to %rectangle*
  %93 = getelementptr %rectangle, %rectangle* %92, i32 0, i32 1
  %94 = load float, float* %93, align 4
  %95 = fcmp une float %94, 5.000000e+00
  br i1 %95, label %then10, label %else11

then10:                                           ; preds = %then8
  %96 = load i8*, i8** getelementptr inbounds (%string_descriptor, %string_descriptor* @string_const.15, i32 0, i32 0), align 8
  %97 = load i8*, i8** getelementptr inbounds (%string_descriptor, %string_descriptor* @string_const.17, i32 0, i32 0), align 8
  call void (i8*, ...) @_lcompilers_print_error(i8* getelementptr inbounds ([5 x i8], [5 x i8]* @15, i32 0, i32 0), i8* %96, i8* %97)
  call void @exit(i32 1)
  br label %ifcont12

else11:                                           ; preds = %then8
  br label %ifcont12

ifcont12:                                         ; preds = %else11, %then10
  %98 = load %shape*, %shape** %s2, align 8
  %99 = bitcast %shape* %98 to %rectangle*
  %100 = getelementptr %rectangle, %rectangle* %99, i32 0, i32 2
  %101 = load float, float* %100, align 4
  %102 = fcmp une float %101, 4.000000e+00
  br i1 %102, label %then13, label %else14

then13:                                           ; preds = %ifcont12
  %103 = load i8*, i8** getelementptr inbounds (%string_descriptor, %string_descriptor* @string_const.19, i32 0, i32 0), align 8
  %104 = load i8*, i8** getelementptr inbounds (%string_descriptor, %string_descriptor* @string_const.21, i32 0, i32 0), align 8
  call void (i8*, ...) @_lcompilers_print_error(i8* getelementptr inbounds ([5 x i8], [5 x i8]* @16, i32 0, i32 0), i8* %103, i8* %104)
  call void @exit(i32 1)
  br label %ifcont15

else14:                                           ; preds = %ifcont12
  br label %ifcont15

ifcont15:                                         ; preds = %else14, %then13
  br label %ifcont17

else16:                                           ; preds = %else7
  %105 = load i8*, i8** getelementptr inbounds (%string_descriptor, %string_descriptor* @string_const.23, i32 0, i32 0), align 8
  call void @_lfortran_printf(i8* getelementptr inbounds ([5 x i8], [5 x i8]* @18, i32 0, i32 0), i8* %105, i32 16, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @17, i32 0, i32 0), i32 1)
  br label %ifcont17

ifcont17:                                         ; preds = %else16, %ifcont15, %then6
  call void @_lpython_free_argv()
  br label %return

return:                                           ; preds = %ifcont17
  ret i32 0
}

declare void @_lpython_call_initial_functions(i32, i8**)

declare i8* @_lfortran_malloc(i64)

; Function Attrs: argmemonly nounwind willreturn writeonly
declare void @llvm.memset.p0i8.i32(i8* nocapture writeonly, i8, i32, i1 immarg) #0

declare i8* @__lfortran_dynamic_cast(i8*, i8*, i1)

declare void @_lfortran_printf(i8*, i8*, i32, i8*, i32)

declare i8* @_lcompilers_string_format_fortran(i8*, i64, i8*, i32, i32, ...)

declare i64 @_lfortran_str_len(i8*)

declare void @_lcompilers_print_error(i8*, ...)

declare void @exit(i32)

declare void @_lpython_free_argv()

attributes #0 = { argmemonly nounwind willreturn writeonly }
