; ModuleID = 'LFortran'
source_filename = "LFortran"

%string_descriptor = type <{ i8*, i64 }>

@0 = private unnamed_addr constant [2 x i8] c"a\00", align 1
@1 = private unnamed_addr constant [120 x i8] c"Runtime error: Array '%s' index out of bounds.\0A\0ATried to access index %d of dimension %d, but valid range is %d to %d.\0A\00", align 1
@2 = private unnamed_addr constant [2 x i8] c"a\00", align 1
@3 = private unnamed_addr constant [120 x i8] c"Runtime error: Array '%s' index out of bounds.\0A\0ATried to access index %d of dimension %d, but valid range is %d to %d.\0A\00", align 1
@4 = private unnamed_addr constant [2 x i8] c"a\00", align 1
@5 = private unnamed_addr constant [120 x i8] c"Runtime error: Array '%s' index out of bounds.\0A\0ATried to access index %d of dimension %d, but valid range is %d to %d.\0A\00", align 1
@6 = private unnamed_addr constant [2 x i8] c"a\00", align 1
@7 = private unnamed_addr constant [120 x i8] c"Runtime error: Array '%s' index out of bounds.\0A\0ATried to access index %d of dimension %d, but valid range is %d to %d.\0A\00", align 1
@string_const_data = private constant [11 x i8] c"ERROR STOP\00"
@string_const = private global %string_descriptor <{ i8* getelementptr inbounds ([11 x i8], [11 x i8]* @string_const_data, i32 0, i32 0), i64 10 }>
@string_const_data.1 = private constant [2 x i8] c"\0A\00"
@string_const.2 = private global %string_descriptor <{ i8* getelementptr inbounds ([2 x i8], [2 x i8]* @string_const_data.1, i32 0, i32 0), i64 1 }>
@8 = private unnamed_addr constant [5 x i8] c"%s%s\00", align 1
@9 = private unnamed_addr constant [2 x i8] c"a\00", align 1
@10 = private unnamed_addr constant [120 x i8] c"Runtime error: Array '%s' index out of bounds.\0A\0ATried to access index %d of dimension %d, but valid range is %d to %d.\0A\00", align 1
@string_const_data.3 = private constant [11 x i8] c"ERROR STOP\00"
@string_const.4 = private global %string_descriptor <{ i8* getelementptr inbounds ([11 x i8], [11 x i8]* @string_const_data.3, i32 0, i32 0), i64 10 }>
@string_const_data.5 = private constant [2 x i8] c"\0A\00"
@string_const.6 = private global %string_descriptor <{ i8* getelementptr inbounds ([2 x i8], [2 x i8]* @string_const_data.5, i32 0, i32 0), i64 1 }>
@11 = private unnamed_addr constant [5 x i8] c"%s%s\00", align 1
@12 = private unnamed_addr constant [2 x i8] c"a\00", align 1
@13 = private unnamed_addr constant [120 x i8] c"Runtime error: Array '%s' index out of bounds.\0A\0ATried to access index %d of dimension %d, but valid range is %d to %d.\0A\00", align 1
@string_const_data.7 = private constant [11 x i8] c"ERROR STOP\00"
@string_const.8 = private global %string_descriptor <{ i8* getelementptr inbounds ([11 x i8], [11 x i8]* @string_const_data.7, i32 0, i32 0), i64 10 }>
@string_const_data.9 = private constant [2 x i8] c"\0A\00"
@string_const.10 = private global %string_descriptor <{ i8* getelementptr inbounds ([2 x i8], [2 x i8]* @string_const_data.9, i32 0, i32 0), i64 1 }>
@14 = private unnamed_addr constant [5 x i8] c"%s%s\00", align 1
@15 = private unnamed_addr constant [2 x i8] c"b\00", align 1
@16 = private unnamed_addr constant [120 x i8] c"Runtime error: Array '%s' index out of bounds.\0A\0ATried to access index %d of dimension %d, but valid range is %d to %d.\0A\00", align 1
@17 = private unnamed_addr constant [2 x i8] c"b\00", align 1
@18 = private unnamed_addr constant [120 x i8] c"Runtime error: Array '%s' index out of bounds.\0A\0ATried to access index %d of dimension %d, but valid range is %d to %d.\0A\00", align 1
@19 = private unnamed_addr constant [2 x i8] c"b\00", align 1
@20 = private unnamed_addr constant [120 x i8] c"Runtime error: Array '%s' index out of bounds.\0A\0ATried to access index %d of dimension %d, but valid range is %d to %d.\0A\00", align 1
@21 = private unnamed_addr constant [2 x i8] c"b\00", align 1
@22 = private unnamed_addr constant [120 x i8] c"Runtime error: Array '%s' index out of bounds.\0A\0ATried to access index %d of dimension %d, but valid range is %d to %d.\0A\00", align 1
@string_const_data.11 = private constant [11 x i8] c"ERROR STOP\00"
@string_const.12 = private global %string_descriptor <{ i8* getelementptr inbounds ([11 x i8], [11 x i8]* @string_const_data.11, i32 0, i32 0), i64 10 }>
@string_const_data.13 = private constant [2 x i8] c"\0A\00"
@string_const.14 = private global %string_descriptor <{ i8* getelementptr inbounds ([2 x i8], [2 x i8]* @string_const_data.13, i32 0, i32 0), i64 1 }>
@23 = private unnamed_addr constant [5 x i8] c"%s%s\00", align 1
@24 = private unnamed_addr constant [2 x i8] c"b\00", align 1
@25 = private unnamed_addr constant [120 x i8] c"Runtime error: Array '%s' index out of bounds.\0A\0ATried to access index %d of dimension %d, but valid range is %d to %d.\0A\00", align 1
@string_const_data.15 = private constant [11 x i8] c"ERROR STOP\00"
@string_const.16 = private global %string_descriptor <{ i8* getelementptr inbounds ([11 x i8], [11 x i8]* @string_const_data.15, i32 0, i32 0), i64 10 }>
@string_const_data.17 = private constant [2 x i8] c"\0A\00"
@string_const.18 = private global %string_descriptor <{ i8* getelementptr inbounds ([2 x i8], [2 x i8]* @string_const_data.17, i32 0, i32 0), i64 1 }>
@26 = private unnamed_addr constant [5 x i8] c"%s%s\00", align 1
@27 = private unnamed_addr constant [2 x i8] c"b\00", align 1
@28 = private unnamed_addr constant [120 x i8] c"Runtime error: Array '%s' index out of bounds.\0A\0ATried to access index %d of dimension %d, but valid range is %d to %d.\0A\00", align 1
@string_const_data.19 = private constant [11 x i8] c"ERROR STOP\00"
@string_const.20 = private global %string_descriptor <{ i8* getelementptr inbounds ([11 x i8], [11 x i8]* @string_const_data.19, i32 0, i32 0), i64 10 }>
@string_const_data.21 = private constant [2 x i8] c"\0A\00"
@string_const.22 = private global %string_descriptor <{ i8* getelementptr inbounds ([2 x i8], [2 x i8]* @string_const_data.21, i32 0, i32 0), i64 1 }>
@29 = private unnamed_addr constant [5 x i8] c"%s%s\00", align 1
@30 = private unnamed_addr constant [2 x i8] c"b\00", align 1
@31 = private unnamed_addr constant [120 x i8] c"Runtime error: Array '%s' index out of bounds.\0A\0ATried to access index %d of dimension %d, but valid range is %d to %d.\0A\00", align 1
@string_const_data.23 = private constant [11 x i8] c"ERROR STOP\00"
@string_const.24 = private global %string_descriptor <{ i8* getelementptr inbounds ([11 x i8], [11 x i8]* @string_const_data.23, i32 0, i32 0), i64 10 }>
@string_const_data.25 = private constant [2 x i8] c"\0A\00"
@string_const.26 = private global %string_descriptor <{ i8* getelementptr inbounds ([2 x i8], [2 x i8]* @string_const_data.25, i32 0, i32 0), i64 1 }>
@32 = private unnamed_addr constant [5 x i8] c"%s%s\00", align 1
@33 = private unnamed_addr constant [2 x i8] c"b\00", align 1
@34 = private unnamed_addr constant [120 x i8] c"Runtime error: Array '%s' index out of bounds.\0A\0ATried to access index %d of dimension %d, but valid range is %d to %d.\0A\00", align 1
@35 = private unnamed_addr constant [2 x i8] c"a\00", align 1
@36 = private unnamed_addr constant [120 x i8] c"Runtime error: Array '%s' index out of bounds.\0A\0ATried to access index %d of dimension %d, but valid range is %d to %d.\0A\00", align 1
@37 = private unnamed_addr constant [2 x i8] c"b\00", align 1
@38 = private unnamed_addr constant [120 x i8] c"Runtime error: Array '%s' index out of bounds.\0A\0ATried to access index %d of dimension %d, but valid range is %d to %d.\0A\00", align 1
@string_const_data.27 = private constant [11 x i8] c"ERROR STOP\00"
@string_const.28 = private global %string_descriptor <{ i8* getelementptr inbounds ([11 x i8], [11 x i8]* @string_const_data.27, i32 0, i32 0), i64 10 }>
@string_const_data.29 = private constant [2 x i8] c"\0A\00"
@string_const.30 = private global %string_descriptor <{ i8* getelementptr inbounds ([2 x i8], [2 x i8]* @string_const_data.29, i32 0, i32 0), i64 1 }>
@39 = private unnamed_addr constant [5 x i8] c"%s%s\00", align 1
@40 = private unnamed_addr constant [2 x i8] c"b\00", align 1
@41 = private unnamed_addr constant [120 x i8] c"Runtime error: Array '%s' index out of bounds.\0A\0ATried to access index %d of dimension %d, but valid range is %d to %d.\0A\00", align 1
@string_const_data.31 = private constant [11 x i8] c"ERROR STOP\00"
@string_const.32 = private global %string_descriptor <{ i8* getelementptr inbounds ([11 x i8], [11 x i8]* @string_const_data.31, i32 0, i32 0), i64 10 }>
@string_const_data.33 = private constant [2 x i8] c"\0A\00"
@string_const.34 = private global %string_descriptor <{ i8* getelementptr inbounds ([2 x i8], [2 x i8]* @string_const_data.33, i32 0, i32 0), i64 1 }>
@42 = private unnamed_addr constant [5 x i8] c"%s%s\00", align 1
@43 = private unnamed_addr constant [2 x i8] c"b\00", align 1
@44 = private unnamed_addr constant [120 x i8] c"Runtime error: Array '%s' index out of bounds.\0A\0ATried to access index %d of dimension %d, but valid range is %d to %d.\0A\00", align 1
@string_const_data.35 = private constant [11 x i8] c"ERROR STOP\00"
@string_const.36 = private global %string_descriptor <{ i8* getelementptr inbounds ([11 x i8], [11 x i8]* @string_const_data.35, i32 0, i32 0), i64 10 }>
@string_const_data.37 = private constant [2 x i8] c"\0A\00"
@string_const.38 = private global %string_descriptor <{ i8* getelementptr inbounds ([2 x i8], [2 x i8]* @string_const_data.37, i32 0, i32 0), i64 1 }>
@45 = private unnamed_addr constant [5 x i8] c"%s%s\00", align 1
@46 = private unnamed_addr constant [2 x i8] c"b\00", align 1
@47 = private unnamed_addr constant [120 x i8] c"Runtime error: Array '%s' index out of bounds.\0A\0ATried to access index %d of dimension %d, but valid range is %d to %d.\0A\00", align 1
@48 = private unnamed_addr constant [2 x i8] c"b\00", align 1
@49 = private unnamed_addr constant [120 x i8] c"Runtime error: Array '%s' index out of bounds.\0A\0ATried to access index %d of dimension %d, but valid range is %d to %d.\0A\00", align 1
@50 = private unnamed_addr constant [2 x i8] c"b\00", align 1
@51 = private unnamed_addr constant [120 x i8] c"Runtime error: Array '%s' index out of bounds.\0A\0ATried to access index %d of dimension %d, but valid range is %d to %d.\0A\00", align 1
@52 = private unnamed_addr constant [2 x i8] c"b\00", align 1
@53 = private unnamed_addr constant [120 x i8] c"Runtime error: Array '%s' index out of bounds.\0A\0ATried to access index %d of dimension %d, but valid range is %d to %d.\0A\00", align 1
@54 = private unnamed_addr constant [2 x i8] c"a\00", align 1
@55 = private unnamed_addr constant [120 x i8] c"Runtime error: Array '%s' index out of bounds.\0A\0ATried to access index %d of dimension %d, but valid range is %d to %d.\0A\00", align 1
@56 = private unnamed_addr constant [2 x i8] c"b\00", align 1
@57 = private unnamed_addr constant [120 x i8] c"Runtime error: Array '%s' index out of bounds.\0A\0ATried to access index %d of dimension %d, but valid range is %d to %d.\0A\00", align 1
@string_const_data.39 = private constant [11 x i8] c"ERROR STOP\00"
@string_const.40 = private global %string_descriptor <{ i8* getelementptr inbounds ([11 x i8], [11 x i8]* @string_const_data.39, i32 0, i32 0), i64 10 }>
@string_const_data.41 = private constant [2 x i8] c"\0A\00"
@string_const.42 = private global %string_descriptor <{ i8* getelementptr inbounds ([2 x i8], [2 x i8]* @string_const_data.41, i32 0, i32 0), i64 1 }>
@58 = private unnamed_addr constant [5 x i8] c"%s%s\00", align 1
@59 = private unnamed_addr constant [2 x i8] c"b\00", align 1
@60 = private unnamed_addr constant [120 x i8] c"Runtime error: Array '%s' index out of bounds.\0A\0ATried to access index %d of dimension %d, but valid range is %d to %d.\0A\00", align 1
@61 = private unnamed_addr constant [2 x i8] c"a\00", align 1
@62 = private unnamed_addr constant [120 x i8] c"Runtime error: Array '%s' index out of bounds.\0A\0ATried to access index %d of dimension %d, but valid range is %d to %d.\0A\00", align 1
@63 = private unnamed_addr constant [2 x i8] c"b\00", align 1
@64 = private unnamed_addr constant [120 x i8] c"Runtime error: Array '%s' index out of bounds.\0A\0ATried to access index %d of dimension %d, but valid range is %d to %d.\0A\00", align 1
@string_const_data.43 = private constant [11 x i8] c"ERROR STOP\00"
@string_const.44 = private global %string_descriptor <{ i8* getelementptr inbounds ([11 x i8], [11 x i8]* @string_const_data.43, i32 0, i32 0), i64 10 }>
@string_const_data.45 = private constant [2 x i8] c"\0A\00"
@string_const.46 = private global %string_descriptor <{ i8* getelementptr inbounds ([2 x i8], [2 x i8]* @string_const_data.45, i32 0, i32 0), i64 1 }>
@65 = private unnamed_addr constant [5 x i8] c"%s%s\00", align 1
@66 = private unnamed_addr constant [2 x i8] c"c\00", align 1
@67 = private unnamed_addr constant [120 x i8] c"Runtime error: Array '%s' index out of bounds.\0A\0ATried to access index %d of dimension %d, but valid range is %d to %d.\0A\00", align 1
@68 = private unnamed_addr constant [2 x i8] c"c\00", align 1
@69 = private unnamed_addr constant [120 x i8] c"Runtime error: Array '%s' index out of bounds.\0A\0ATried to access index %d of dimension %d, but valid range is %d to %d.\0A\00", align 1
@70 = private unnamed_addr constant [2 x i8] c"c\00", align 1
@71 = private unnamed_addr constant [120 x i8] c"Runtime error: Array '%s' index out of bounds.\0A\0ATried to access index %d of dimension %d, but valid range is %d to %d.\0A\00", align 1
@72 = private unnamed_addr constant [2 x i8] c"c\00", align 1
@73 = private unnamed_addr constant [120 x i8] c"Runtime error: Array '%s' index out of bounds.\0A\0ATried to access index %d of dimension %d, but valid range is %d to %d.\0A\00", align 1
@74 = private unnamed_addr constant [2 x i8] c"c\00", align 1
@75 = private unnamed_addr constant [120 x i8] c"Runtime error: Array '%s' index out of bounds.\0A\0ATried to access index %d of dimension %d, but valid range is %d to %d.\0A\00", align 1
@76 = private unnamed_addr constant [2 x i8] c"c\00", align 1
@77 = private unnamed_addr constant [120 x i8] c"Runtime error: Array '%s' index out of bounds.\0A\0ATried to access index %d of dimension %d, but valid range is %d to %d.\0A\00", align 1
@string_const_data.47 = private constant [11 x i8] c"ERROR STOP\00"
@string_const.48 = private global %string_descriptor <{ i8* getelementptr inbounds ([11 x i8], [11 x i8]* @string_const_data.47, i32 0, i32 0), i64 10 }>
@string_const_data.49 = private constant [2 x i8] c"\0A\00"
@string_const.50 = private global %string_descriptor <{ i8* getelementptr inbounds ([2 x i8], [2 x i8]* @string_const_data.49, i32 0, i32 0), i64 1 }>
@78 = private unnamed_addr constant [5 x i8] c"%s%s\00", align 1
@79 = private unnamed_addr constant [2 x i8] c"c\00", align 1
@80 = private unnamed_addr constant [120 x i8] c"Runtime error: Array '%s' index out of bounds.\0A\0ATried to access index %d of dimension %d, but valid range is %d to %d.\0A\00", align 1
@81 = private unnamed_addr constant [2 x i8] c"c\00", align 1
@82 = private unnamed_addr constant [120 x i8] c"Runtime error: Array '%s' index out of bounds.\0A\0ATried to access index %d of dimension %d, but valid range is %d to %d.\0A\00", align 1
@string_const_data.51 = private constant [11 x i8] c"ERROR STOP\00"
@string_const.52 = private global %string_descriptor <{ i8* getelementptr inbounds ([11 x i8], [11 x i8]* @string_const_data.51, i32 0, i32 0), i64 10 }>
@string_const_data.53 = private constant [2 x i8] c"\0A\00"
@string_const.54 = private global %string_descriptor <{ i8* getelementptr inbounds ([2 x i8], [2 x i8]* @string_const_data.53, i32 0, i32 0), i64 1 }>
@83 = private unnamed_addr constant [5 x i8] c"%s%s\00", align 1
@84 = private unnamed_addr constant [2 x i8] c"c\00", align 1
@85 = private unnamed_addr constant [120 x i8] c"Runtime error: Array '%s' index out of bounds.\0A\0ATried to access index %d of dimension %d, but valid range is %d to %d.\0A\00", align 1
@86 = private unnamed_addr constant [2 x i8] c"c\00", align 1
@87 = private unnamed_addr constant [120 x i8] c"Runtime error: Array '%s' index out of bounds.\0A\0ATried to access index %d of dimension %d, but valid range is %d to %d.\0A\00", align 1
@string_const_data.55 = private constant [11 x i8] c"ERROR STOP\00"
@string_const.56 = private global %string_descriptor <{ i8* getelementptr inbounds ([11 x i8], [11 x i8]* @string_const_data.55, i32 0, i32 0), i64 10 }>
@string_const_data.57 = private constant [2 x i8] c"\0A\00"
@string_const.58 = private global %string_descriptor <{ i8* getelementptr inbounds ([2 x i8], [2 x i8]* @string_const_data.57, i32 0, i32 0), i64 1 }>
@88 = private unnamed_addr constant [5 x i8] c"%s%s\00", align 1
@89 = private unnamed_addr constant [2 x i8] c"c\00", align 1
@90 = private unnamed_addr constant [120 x i8] c"Runtime error: Array '%s' index out of bounds.\0A\0ATried to access index %d of dimension %d, but valid range is %d to %d.\0A\00", align 1
@91 = private unnamed_addr constant [2 x i8] c"c\00", align 1
@92 = private unnamed_addr constant [120 x i8] c"Runtime error: Array '%s' index out of bounds.\0A\0ATried to access index %d of dimension %d, but valid range is %d to %d.\0A\00", align 1
@string_const_data.59 = private constant [11 x i8] c"ERROR STOP\00"
@string_const.60 = private global %string_descriptor <{ i8* getelementptr inbounds ([11 x i8], [11 x i8]* @string_const_data.59, i32 0, i32 0), i64 10 }>
@string_const_data.61 = private constant [2 x i8] c"\0A\00"
@string_const.62 = private global %string_descriptor <{ i8* getelementptr inbounds ([2 x i8], [2 x i8]* @string_const_data.61, i32 0, i32 0), i64 1 }>
@93 = private unnamed_addr constant [5 x i8] c"%s%s\00", align 1

define i32 @main(i32 %0, i8** %1) {
.entry:
  %i = alloca i32, align 4
  %j = alloca i32, align 4
  call void @_lpython_call_initial_functions(i32 %0, i8** %1)
  %a = alloca [3 x i1], align 1
  %b = alloca [4 x i1], align 1
  %c = alloca [4 x i1], align 1
  %i1 = alloca i32, align 4
  %j2 = alloca i32, align 4
  br i1 false, label %then, label %else

then:                                             ; preds = %.entry
  call void (i8*, ...) @_lcompilers_print_error(i8* getelementptr inbounds ([120 x i8], [120 x i8]* @1, i32 0, i32 0), i8* getelementptr inbounds ([2 x i8], [2 x i8]* @0, i32 0, i32 0), i32 1, i32 1, i32 1, i32 3)
  call void @exit(i32 1)
  br label %ifcont

else:                                             ; preds = %.entry
  br label %ifcont

ifcont:                                           ; preds = %else, %then
  %2 = getelementptr [3 x i1], [3 x i1]* %a, i32 0, i32 0
  store i1 true, i1* %2, align 1
  store i32 1, i32* %i1, align 4
  br label %loop.head

loop.head:                                        ; preds = %ifcont8, %ifcont
  %3 = load i32, i32* %i1, align 4
  %4 = add i32 %3, 1
  %5 = icmp sle i32 %4, 3
  br i1 %5, label %loop.body, label %loop.end

loop.body:                                        ; preds = %loop.head
  %6 = load i32, i32* %i1, align 4
  %7 = add i32 %6, 1
  store i32 %7, i32* %i1, align 4
  %8 = load i32, i32* %i1, align 4
  %9 = sub i32 %8, 1
  %10 = mul i32 1, %9
  %11 = add i32 0, %10
  %12 = icmp slt i32 %8, 1
  %13 = icmp sgt i32 %8, 3
  %14 = or i1 %12, %13
  br i1 %14, label %then3, label %else4

then3:                                            ; preds = %loop.body
  call void (i8*, ...) @_lcompilers_print_error(i8* getelementptr inbounds ([120 x i8], [120 x i8]* @3, i32 0, i32 0), i8* getelementptr inbounds ([2 x i8], [2 x i8]* @2, i32 0, i32 0), i32 %8, i32 1, i32 1, i32 3)
  call void @exit(i32 1)
  br label %ifcont5

else4:                                            ; preds = %loop.body
  br label %ifcont5

ifcont5:                                          ; preds = %else4, %then3
  %15 = getelementptr [3 x i1], [3 x i1]* %a, i32 0, i32 %11
  %16 = load i32, i32* %i1, align 4
  %17 = sub i32 %16, 1
  %18 = sub i32 %17, 1
  %19 = mul i32 1, %18
  %20 = add i32 0, %19
  %21 = icmp slt i32 %17, 1
  %22 = icmp sgt i32 %17, 3
  %23 = or i1 %21, %22
  br i1 %23, label %then6, label %else7

then6:                                            ; preds = %ifcont5
  call void (i8*, ...) @_lcompilers_print_error(i8* getelementptr inbounds ([120 x i8], [120 x i8]* @5, i32 0, i32 0), i8* getelementptr inbounds ([2 x i8], [2 x i8]* @4, i32 0, i32 0), i32 %17, i32 1, i32 1, i32 3)
  call void @exit(i32 1)
  br label %ifcont8

else7:                                            ; preds = %ifcont5
  br label %ifcont8

ifcont8:                                          ; preds = %else7, %then6
  %24 = getelementptr [3 x i1], [3 x i1]* %a, i32 0, i32 %20
  %25 = load i1, i1* %24, align 1
  %26 = xor i1 %25, true
  store i1 %26, i1* %15, align 1
  br label %loop.head

loop.end:                                         ; preds = %loop.head
  br i1 false, label %then9, label %else10

then9:                                            ; preds = %loop.end
  call void (i8*, ...) @_lcompilers_print_error(i8* getelementptr inbounds ([120 x i8], [120 x i8]* @7, i32 0, i32 0), i8* getelementptr inbounds ([2 x i8], [2 x i8]* @6, i32 0, i32 0), i32 1, i32 1, i32 1, i32 3)
  call void @exit(i32 1)
  br label %ifcont11

else10:                                           ; preds = %loop.end
  br label %ifcont11

ifcont11:                                         ; preds = %else10, %then9
  %27 = getelementptr [3 x i1], [3 x i1]* %a, i32 0, i32 0
  %28 = load i1, i1* %27, align 1
  %29 = xor i1 %28, true
  br i1 %29, label %then12, label %else13

then12:                                           ; preds = %ifcont11
  %30 = load i8*, i8** getelementptr inbounds (%string_descriptor, %string_descriptor* @string_const, i32 0, i32 0), align 8
  %31 = load i8*, i8** getelementptr inbounds (%string_descriptor, %string_descriptor* @string_const.2, i32 0, i32 0), align 8
  call void (i8*, ...) @_lcompilers_print_error(i8* getelementptr inbounds ([5 x i8], [5 x i8]* @8, i32 0, i32 0), i8* %30, i8* %31)
  call void @exit(i32 1)
  br label %ifcont14

else13:                                           ; preds = %ifcont11
  br label %ifcont14

ifcont14:                                         ; preds = %else13, %then12
  br i1 false, label %then15, label %else16

then15:                                           ; preds = %ifcont14
  call void (i8*, ...) @_lcompilers_print_error(i8* getelementptr inbounds ([120 x i8], [120 x i8]* @10, i32 0, i32 0), i8* getelementptr inbounds ([2 x i8], [2 x i8]* @9, i32 0, i32 0), i32 2, i32 1, i32 1, i32 3)
  call void @exit(i32 1)
  br label %ifcont17

else16:                                           ; preds = %ifcont14
  br label %ifcont17

ifcont17:                                         ; preds = %else16, %then15
  %32 = getelementptr [3 x i1], [3 x i1]* %a, i32 0, i32 1
  %33 = load i1, i1* %32, align 1
  br i1 %33, label %then18, label %else19

then18:                                           ; preds = %ifcont17
  %34 = load i8*, i8** getelementptr inbounds (%string_descriptor, %string_descriptor* @string_const.4, i32 0, i32 0), align 8
  %35 = load i8*, i8** getelementptr inbounds (%string_descriptor, %string_descriptor* @string_const.6, i32 0, i32 0), align 8
  call void (i8*, ...) @_lcompilers_print_error(i8* getelementptr inbounds ([5 x i8], [5 x i8]* @11, i32 0, i32 0), i8* %34, i8* %35)
  call void @exit(i32 1)
  br label %ifcont20

else19:                                           ; preds = %ifcont17
  br label %ifcont20

ifcont20:                                         ; preds = %else19, %then18
  br i1 false, label %then21, label %else22

then21:                                           ; preds = %ifcont20
  call void (i8*, ...) @_lcompilers_print_error(i8* getelementptr inbounds ([120 x i8], [120 x i8]* @13, i32 0, i32 0), i8* getelementptr inbounds ([2 x i8], [2 x i8]* @12, i32 0, i32 0), i32 3, i32 1, i32 1, i32 3)
  call void @exit(i32 1)
  br label %ifcont23

else22:                                           ; preds = %ifcont20
  br label %ifcont23

ifcont23:                                         ; preds = %else22, %then21
  %36 = getelementptr [3 x i1], [3 x i1]* %a, i32 0, i32 2
  %37 = load i1, i1* %36, align 1
  %38 = xor i1 %37, true
  br i1 %38, label %then24, label %else25

then24:                                           ; preds = %ifcont23
  %39 = load i8*, i8** getelementptr inbounds (%string_descriptor, %string_descriptor* @string_const.8, i32 0, i32 0), align 8
  %40 = load i8*, i8** getelementptr inbounds (%string_descriptor, %string_descriptor* @string_const.10, i32 0, i32 0), align 8
  call void (i8*, ...) @_lcompilers_print_error(i8* getelementptr inbounds ([5 x i8], [5 x i8]* @14, i32 0, i32 0), i8* %39, i8* %40)
  call void @exit(i32 1)
  br label %ifcont26

else25:                                           ; preds = %ifcont23
  br label %ifcont26

ifcont26:                                         ; preds = %else25, %then24
  br i1 false, label %then27, label %else28

then27:                                           ; preds = %ifcont26
  call void (i8*, ...) @_lcompilers_print_error(i8* getelementptr inbounds ([120 x i8], [120 x i8]* @16, i32 0, i32 0), i8* getelementptr inbounds ([2 x i8], [2 x i8]* @15, i32 0, i32 0), i32 1, i32 1, i32 1, i32 4)
  call void @exit(i32 1)
  br label %ifcont29

else28:                                           ; preds = %ifcont26
  br label %ifcont29

ifcont29:                                         ; preds = %else28, %then27
  %41 = getelementptr [4 x i1], [4 x i1]* %b, i32 0, i32 0
  store i1 false, i1* %41, align 1
  store i32 11, i32* %i1, align 4
  br label %loop.head30

loop.head30:                                      ; preds = %ifcont37, %ifcont29
  %42 = load i32, i32* %i1, align 4
  %43 = add i32 %42, 1
  %44 = icmp sle i32 %43, 14
  br i1 %44, label %loop.body31, label %loop.end38

loop.body31:                                      ; preds = %loop.head30
  %45 = load i32, i32* %i1, align 4
  %46 = add i32 %45, 1
  store i32 %46, i32* %i1, align 4
  %47 = load i32, i32* %i1, align 4
  %48 = sub i32 %47, 10
  %49 = sub i32 %48, 1
  %50 = mul i32 1, %49
  %51 = add i32 0, %50
  %52 = icmp slt i32 %48, 1
  %53 = icmp sgt i32 %48, 4
  %54 = or i1 %52, %53
  br i1 %54, label %then32, label %else33

then32:                                           ; preds = %loop.body31
  call void (i8*, ...) @_lcompilers_print_error(i8* getelementptr inbounds ([120 x i8], [120 x i8]* @18, i32 0, i32 0), i8* getelementptr inbounds ([2 x i8], [2 x i8]* @17, i32 0, i32 0), i32 %48, i32 1, i32 1, i32 4)
  call void @exit(i32 1)
  br label %ifcont34

else33:                                           ; preds = %loop.body31
  br label %ifcont34

ifcont34:                                         ; preds = %else33, %then32
  %55 = getelementptr [4 x i1], [4 x i1]* %b, i32 0, i32 %51
  %56 = load i32, i32* %i1, align 4
  %57 = sub i32 %56, 10
  %58 = sub i32 %57, 1
  %59 = sub i32 %58, 1
  %60 = mul i32 1, %59
  %61 = add i32 0, %60
  %62 = icmp slt i32 %58, 1
  %63 = icmp sgt i32 %58, 4
  %64 = or i1 %62, %63
  br i1 %64, label %then35, label %else36

then35:                                           ; preds = %ifcont34
  call void (i8*, ...) @_lcompilers_print_error(i8* getelementptr inbounds ([120 x i8], [120 x i8]* @20, i32 0, i32 0), i8* getelementptr inbounds ([2 x i8], [2 x i8]* @19, i32 0, i32 0), i32 %58, i32 1, i32 1, i32 4)
  call void @exit(i32 1)
  br label %ifcont37

else36:                                           ; preds = %ifcont34
  br label %ifcont37

ifcont37:                                         ; preds = %else36, %then35
  %65 = getelementptr [4 x i1], [4 x i1]* %b, i32 0, i32 %61
  %66 = load i1, i1* %65, align 1
  %67 = xor i1 %66, true
  store i1 %67, i1* %55, align 1
  br label %loop.head30

loop.end38:                                       ; preds = %loop.head30
  br i1 false, label %then39, label %else40

then39:                                           ; preds = %loop.end38
  call void (i8*, ...) @_lcompilers_print_error(i8* getelementptr inbounds ([120 x i8], [120 x i8]* @22, i32 0, i32 0), i8* getelementptr inbounds ([2 x i8], [2 x i8]* @21, i32 0, i32 0), i32 1, i32 1, i32 1, i32 4)
  call void @exit(i32 1)
  br label %ifcont41

else40:                                           ; preds = %loop.end38
  br label %ifcont41

ifcont41:                                         ; preds = %else40, %then39
  %68 = getelementptr [4 x i1], [4 x i1]* %b, i32 0, i32 0
  %69 = load i1, i1* %68, align 1
  br i1 %69, label %then42, label %else43

then42:                                           ; preds = %ifcont41
  %70 = load i8*, i8** getelementptr inbounds (%string_descriptor, %string_descriptor* @string_const.12, i32 0, i32 0), align 8
  %71 = load i8*, i8** getelementptr inbounds (%string_descriptor, %string_descriptor* @string_const.14, i32 0, i32 0), align 8
  call void (i8*, ...) @_lcompilers_print_error(i8* getelementptr inbounds ([5 x i8], [5 x i8]* @23, i32 0, i32 0), i8* %70, i8* %71)
  call void @exit(i32 1)
  br label %ifcont44

else43:                                           ; preds = %ifcont41
  br label %ifcont44

ifcont44:                                         ; preds = %else43, %then42
  br i1 false, label %then45, label %else46

then45:                                           ; preds = %ifcont44
  call void (i8*, ...) @_lcompilers_print_error(i8* getelementptr inbounds ([120 x i8], [120 x i8]* @25, i32 0, i32 0), i8* getelementptr inbounds ([2 x i8], [2 x i8]* @24, i32 0, i32 0), i32 2, i32 1, i32 1, i32 4)
  call void @exit(i32 1)
  br label %ifcont47

else46:                                           ; preds = %ifcont44
  br label %ifcont47

ifcont47:                                         ; preds = %else46, %then45
  %72 = getelementptr [4 x i1], [4 x i1]* %b, i32 0, i32 1
  %73 = load i1, i1* %72, align 1
  %74 = xor i1 %73, true
  br i1 %74, label %then48, label %else49

then48:                                           ; preds = %ifcont47
  %75 = load i8*, i8** getelementptr inbounds (%string_descriptor, %string_descriptor* @string_const.16, i32 0, i32 0), align 8
  %76 = load i8*, i8** getelementptr inbounds (%string_descriptor, %string_descriptor* @string_const.18, i32 0, i32 0), align 8
  call void (i8*, ...) @_lcompilers_print_error(i8* getelementptr inbounds ([5 x i8], [5 x i8]* @26, i32 0, i32 0), i8* %75, i8* %76)
  call void @exit(i32 1)
  br label %ifcont50

else49:                                           ; preds = %ifcont47
  br label %ifcont50

ifcont50:                                         ; preds = %else49, %then48
  br i1 false, label %then51, label %else52

then51:                                           ; preds = %ifcont50
  call void (i8*, ...) @_lcompilers_print_error(i8* getelementptr inbounds ([120 x i8], [120 x i8]* @28, i32 0, i32 0), i8* getelementptr inbounds ([2 x i8], [2 x i8]* @27, i32 0, i32 0), i32 3, i32 1, i32 1, i32 4)
  call void @exit(i32 1)
  br label %ifcont53

else52:                                           ; preds = %ifcont50
  br label %ifcont53

ifcont53:                                         ; preds = %else52, %then51
  %77 = getelementptr [4 x i1], [4 x i1]* %b, i32 0, i32 2
  %78 = load i1, i1* %77, align 1
  br i1 %78, label %then54, label %else55

then54:                                           ; preds = %ifcont53
  %79 = load i8*, i8** getelementptr inbounds (%string_descriptor, %string_descriptor* @string_const.20, i32 0, i32 0), align 8
  %80 = load i8*, i8** getelementptr inbounds (%string_descriptor, %string_descriptor* @string_const.22, i32 0, i32 0), align 8
  call void (i8*, ...) @_lcompilers_print_error(i8* getelementptr inbounds ([5 x i8], [5 x i8]* @29, i32 0, i32 0), i8* %79, i8* %80)
  call void @exit(i32 1)
  br label %ifcont56

else55:                                           ; preds = %ifcont53
  br label %ifcont56

ifcont56:                                         ; preds = %else55, %then54
  br i1 false, label %then57, label %else58

then57:                                           ; preds = %ifcont56
  call void (i8*, ...) @_lcompilers_print_error(i8* getelementptr inbounds ([120 x i8], [120 x i8]* @31, i32 0, i32 0), i8* getelementptr inbounds ([2 x i8], [2 x i8]* @30, i32 0, i32 0), i32 4, i32 1, i32 1, i32 4)
  call void @exit(i32 1)
  br label %ifcont59

else58:                                           ; preds = %ifcont56
  br label %ifcont59

ifcont59:                                         ; preds = %else58, %then57
  %81 = getelementptr [4 x i1], [4 x i1]* %b, i32 0, i32 3
  %82 = load i1, i1* %81, align 1
  %83 = xor i1 %82, true
  br i1 %83, label %then60, label %else61

then60:                                           ; preds = %ifcont59
  %84 = load i8*, i8** getelementptr inbounds (%string_descriptor, %string_descriptor* @string_const.24, i32 0, i32 0), align 8
  %85 = load i8*, i8** getelementptr inbounds (%string_descriptor, %string_descriptor* @string_const.26, i32 0, i32 0), align 8
  call void (i8*, ...) @_lcompilers_print_error(i8* getelementptr inbounds ([5 x i8], [5 x i8]* @32, i32 0, i32 0), i8* %84, i8* %85)
  call void @exit(i32 1)
  br label %ifcont62

else61:                                           ; preds = %ifcont59
  br label %ifcont62

ifcont62:                                         ; preds = %else61, %then60
  store i32 0, i32* %i1, align 4
  br label %loop.head63

loop.head63:                                      ; preds = %ifcont70, %ifcont62
  %86 = load i32, i32* %i1, align 4
  %87 = add i32 %86, 1
  %88 = icmp sle i32 %87, 3
  br i1 %88, label %loop.body64, label %loop.end71

loop.body64:                                      ; preds = %loop.head63
  %89 = load i32, i32* %i1, align 4
  %90 = add i32 %89, 1
  store i32 %90, i32* %i1, align 4
  %91 = load i32, i32* %i1, align 4
  %92 = sub i32 %91, 1
  %93 = mul i32 1, %92
  %94 = add i32 0, %93
  %95 = icmp slt i32 %91, 1
  %96 = icmp sgt i32 %91, 4
  %97 = or i1 %95, %96
  br i1 %97, label %then65, label %else66

then65:                                           ; preds = %loop.body64
  call void (i8*, ...) @_lcompilers_print_error(i8* getelementptr inbounds ([120 x i8], [120 x i8]* @34, i32 0, i32 0), i8* getelementptr inbounds ([2 x i8], [2 x i8]* @33, i32 0, i32 0), i32 %91, i32 1, i32 1, i32 4)
  call void @exit(i32 1)
  br label %ifcont67

else66:                                           ; preds = %loop.body64
  br label %ifcont67

ifcont67:                                         ; preds = %else66, %then65
  %98 = getelementptr [4 x i1], [4 x i1]* %b, i32 0, i32 %94
  %99 = load i32, i32* %i1, align 4
  %100 = sub i32 %99, 1
  %101 = mul i32 1, %100
  %102 = add i32 0, %101
  %103 = icmp slt i32 %99, 1
  %104 = icmp sgt i32 %99, 3
  %105 = or i1 %103, %104
  br i1 %105, label %then68, label %else69

then68:                                           ; preds = %ifcont67
  call void (i8*, ...) @_lcompilers_print_error(i8* getelementptr inbounds ([120 x i8], [120 x i8]* @36, i32 0, i32 0), i8* getelementptr inbounds ([2 x i8], [2 x i8]* @35, i32 0, i32 0), i32 %99, i32 1, i32 1, i32 3)
  call void @exit(i32 1)
  br label %ifcont70

else69:                                           ; preds = %ifcont67
  br label %ifcont70

ifcont70:                                         ; preds = %else69, %then68
  %106 = getelementptr [3 x i1], [3 x i1]* %a, i32 0, i32 %102
  %107 = load i1, i1* %106, align 1
  %108 = icmp eq i1 %107, false
  %109 = select i1 %108, i1 %107, i1 false
  store i1 %109, i1* %98, align 1
  br label %loop.head63

loop.end71:                                       ; preds = %loop.head63
  br i1 false, label %then72, label %else73

then72:                                           ; preds = %loop.end71
  call void (i8*, ...) @_lcompilers_print_error(i8* getelementptr inbounds ([120 x i8], [120 x i8]* @38, i32 0, i32 0), i8* getelementptr inbounds ([2 x i8], [2 x i8]* @37, i32 0, i32 0), i32 1, i32 1, i32 1, i32 4)
  call void @exit(i32 1)
  br label %ifcont74

else73:                                           ; preds = %loop.end71
  br label %ifcont74

ifcont74:                                         ; preds = %else73, %then72
  %110 = getelementptr [4 x i1], [4 x i1]* %b, i32 0, i32 0
  %111 = load i1, i1* %110, align 1
  br i1 %111, label %then75, label %else76

then75:                                           ; preds = %ifcont74
  %112 = load i8*, i8** getelementptr inbounds (%string_descriptor, %string_descriptor* @string_const.28, i32 0, i32 0), align 8
  %113 = load i8*, i8** getelementptr inbounds (%string_descriptor, %string_descriptor* @string_const.30, i32 0, i32 0), align 8
  call void (i8*, ...) @_lcompilers_print_error(i8* getelementptr inbounds ([5 x i8], [5 x i8]* @39, i32 0, i32 0), i8* %112, i8* %113)
  call void @exit(i32 1)
  br label %ifcont77

else76:                                           ; preds = %ifcont74
  br label %ifcont77

ifcont77:                                         ; preds = %else76, %then75
  br i1 false, label %then78, label %else79

then78:                                           ; preds = %ifcont77
  call void (i8*, ...) @_lcompilers_print_error(i8* getelementptr inbounds ([120 x i8], [120 x i8]* @41, i32 0, i32 0), i8* getelementptr inbounds ([2 x i8], [2 x i8]* @40, i32 0, i32 0), i32 2, i32 1, i32 1, i32 4)
  call void @exit(i32 1)
  br label %ifcont80

else79:                                           ; preds = %ifcont77
  br label %ifcont80

ifcont80:                                         ; preds = %else79, %then78
  %114 = getelementptr [4 x i1], [4 x i1]* %b, i32 0, i32 1
  %115 = load i1, i1* %114, align 1
  br i1 %115, label %then81, label %else82

then81:                                           ; preds = %ifcont80
  %116 = load i8*, i8** getelementptr inbounds (%string_descriptor, %string_descriptor* @string_const.32, i32 0, i32 0), align 8
  %117 = load i8*, i8** getelementptr inbounds (%string_descriptor, %string_descriptor* @string_const.34, i32 0, i32 0), align 8
  call void (i8*, ...) @_lcompilers_print_error(i8* getelementptr inbounds ([5 x i8], [5 x i8]* @42, i32 0, i32 0), i8* %116, i8* %117)
  call void @exit(i32 1)
  br label %ifcont83

else82:                                           ; preds = %ifcont80
  br label %ifcont83

ifcont83:                                         ; preds = %else82, %then81
  br i1 false, label %then84, label %else85

then84:                                           ; preds = %ifcont83
  call void (i8*, ...) @_lcompilers_print_error(i8* getelementptr inbounds ([120 x i8], [120 x i8]* @44, i32 0, i32 0), i8* getelementptr inbounds ([2 x i8], [2 x i8]* @43, i32 0, i32 0), i32 3, i32 1, i32 1, i32 4)
  call void @exit(i32 1)
  br label %ifcont86

else85:                                           ; preds = %ifcont83
  br label %ifcont86

ifcont86:                                         ; preds = %else85, %then84
  %118 = getelementptr [4 x i1], [4 x i1]* %b, i32 0, i32 2
  %119 = load i1, i1* %118, align 1
  br i1 %119, label %then87, label %else88

then87:                                           ; preds = %ifcont86
  %120 = load i8*, i8** getelementptr inbounds (%string_descriptor, %string_descriptor* @string_const.36, i32 0, i32 0), align 8
  %121 = load i8*, i8** getelementptr inbounds (%string_descriptor, %string_descriptor* @string_const.38, i32 0, i32 0), align 8
  call void (i8*, ...) @_lcompilers_print_error(i8* getelementptr inbounds ([5 x i8], [5 x i8]* @45, i32 0, i32 0), i8* %120, i8* %121)
  call void @exit(i32 1)
  br label %ifcont89

else88:                                           ; preds = %ifcont86
  br label %ifcont89

ifcont89:                                         ; preds = %else88, %then87
  br i1 false, label %then90, label %else91

then90:                                           ; preds = %ifcont89
  call void (i8*, ...) @_lcompilers_print_error(i8* getelementptr inbounds ([120 x i8], [120 x i8]* @47, i32 0, i32 0), i8* getelementptr inbounds ([2 x i8], [2 x i8]* @46, i32 0, i32 0), i32 4, i32 1, i32 1, i32 4)
  call void @exit(i32 1)
  br label %ifcont92

else91:                                           ; preds = %ifcont89
  br label %ifcont92

ifcont92:                                         ; preds = %else91, %then90
  %122 = getelementptr [4 x i1], [4 x i1]* %b, i32 0, i32 3
  br i1 false, label %then93, label %else94

then93:                                           ; preds = %ifcont92
  call void (i8*, ...) @_lcompilers_print_error(i8* getelementptr inbounds ([120 x i8], [120 x i8]* @49, i32 0, i32 0), i8* getelementptr inbounds ([2 x i8], [2 x i8]* @48, i32 0, i32 0), i32 1, i32 1, i32 1, i32 4)
  call void @exit(i32 1)
  br label %ifcont95

else94:                                           ; preds = %ifcont92
  br label %ifcont95

ifcont95:                                         ; preds = %else94, %then93
  %123 = getelementptr [4 x i1], [4 x i1]* %b, i32 0, i32 0
  %124 = load i1, i1* %123, align 1
  br i1 false, label %then96, label %else97

then96:                                           ; preds = %ifcont95
  call void (i8*, ...) @_lcompilers_print_error(i8* getelementptr inbounds ([120 x i8], [120 x i8]* @51, i32 0, i32 0), i8* getelementptr inbounds ([2 x i8], [2 x i8]* @50, i32 0, i32 0), i32 2, i32 1, i32 1, i32 4)
  call void @exit(i32 1)
  br label %ifcont98

else97:                                           ; preds = %ifcont95
  br label %ifcont98

ifcont98:                                         ; preds = %else97, %then96
  %125 = getelementptr [4 x i1], [4 x i1]* %b, i32 0, i32 1
  %126 = load i1, i1* %125, align 1
  %127 = icmp eq i1 %124, false
  %128 = select i1 %127, i1 %126, i1 %124
  br i1 false, label %then99, label %else100

then99:                                           ; preds = %ifcont98
  call void (i8*, ...) @_lcompilers_print_error(i8* getelementptr inbounds ([120 x i8], [120 x i8]* @53, i32 0, i32 0), i8* getelementptr inbounds ([2 x i8], [2 x i8]* @52, i32 0, i32 0), i32 3, i32 1, i32 1, i32 4)
  call void @exit(i32 1)
  br label %ifcont101

else100:                                          ; preds = %ifcont98
  br label %ifcont101

ifcont101:                                        ; preds = %else100, %then99
  %129 = getelementptr [4 x i1], [4 x i1]* %b, i32 0, i32 2
  %130 = load i1, i1* %129, align 1
  %131 = icmp eq i1 %128, false
  %132 = select i1 %131, i1 %130, i1 %128
  br i1 false, label %then102, label %else103

then102:                                          ; preds = %ifcont101
  call void (i8*, ...) @_lcompilers_print_error(i8* getelementptr inbounds ([120 x i8], [120 x i8]* @55, i32 0, i32 0), i8* getelementptr inbounds ([2 x i8], [2 x i8]* @54, i32 0, i32 0), i32 1, i32 1, i32 1, i32 3)
  call void @exit(i32 1)
  br label %ifcont104

else103:                                          ; preds = %ifcont101
  br label %ifcont104

ifcont104:                                        ; preds = %else103, %then102
  %133 = getelementptr [3 x i1], [3 x i1]* %a, i32 0, i32 0
  %134 = load i1, i1* %133, align 1
  %135 = icmp eq i1 %132, false
  %136 = select i1 %135, i1 %134, i1 %132
  store i1 %136, i1* %122, align 1
  br i1 false, label %then105, label %else106

then105:                                          ; preds = %ifcont104
  call void (i8*, ...) @_lcompilers_print_error(i8* getelementptr inbounds ([120 x i8], [120 x i8]* @57, i32 0, i32 0), i8* getelementptr inbounds ([2 x i8], [2 x i8]* @56, i32 0, i32 0), i32 4, i32 1, i32 1, i32 4)
  call void @exit(i32 1)
  br label %ifcont107

else106:                                          ; preds = %ifcont104
  br label %ifcont107

ifcont107:                                        ; preds = %else106, %then105
  %137 = getelementptr [4 x i1], [4 x i1]* %b, i32 0, i32 3
  %138 = load i1, i1* %137, align 1
  %139 = xor i1 %138, true
  br i1 %139, label %then108, label %else109

then108:                                          ; preds = %ifcont107
  %140 = load i8*, i8** getelementptr inbounds (%string_descriptor, %string_descriptor* @string_const.40, i32 0, i32 0), align 8
  %141 = load i8*, i8** getelementptr inbounds (%string_descriptor, %string_descriptor* @string_const.42, i32 0, i32 0), align 8
  call void (i8*, ...) @_lcompilers_print_error(i8* getelementptr inbounds ([5 x i8], [5 x i8]* @58, i32 0, i32 0), i8* %140, i8* %141)
  call void @exit(i32 1)
  br label %ifcont110

else109:                                          ; preds = %ifcont107
  br label %ifcont110

ifcont110:                                        ; preds = %else109, %then108
  br i1 false, label %then111, label %else112

then111:                                          ; preds = %ifcont110
  call void (i8*, ...) @_lcompilers_print_error(i8* getelementptr inbounds ([120 x i8], [120 x i8]* @60, i32 0, i32 0), i8* getelementptr inbounds ([2 x i8], [2 x i8]* @59, i32 0, i32 0), i32 4, i32 1, i32 1, i32 4)
  call void @exit(i32 1)
  br label %ifcont113

else112:                                          ; preds = %ifcont110
  br label %ifcont113

ifcont113:                                        ; preds = %else112, %then111
  %142 = getelementptr [4 x i1], [4 x i1]* %b, i32 0, i32 3
  br i1 false, label %then114, label %else115

then114:                                          ; preds = %ifcont113
  call void (i8*, ...) @_lcompilers_print_error(i8* getelementptr inbounds ([120 x i8], [120 x i8]* @62, i32 0, i32 0), i8* getelementptr inbounds ([2 x i8], [2 x i8]* @61, i32 0, i32 0), i32 1, i32 1, i32 1, i32 3)
  call void @exit(i32 1)
  br label %ifcont116

else115:                                          ; preds = %ifcont113
  br label %ifcont116

ifcont116:                                        ; preds = %else115, %then114
  %143 = getelementptr [3 x i1], [3 x i1]* %a, i32 0, i32 0
  %144 = load i1, i1* %143, align 1
  store i1 %144, i1* %142, align 1
  br i1 false, label %then117, label %else118

then117:                                          ; preds = %ifcont116
  call void (i8*, ...) @_lcompilers_print_error(i8* getelementptr inbounds ([120 x i8], [120 x i8]* @64, i32 0, i32 0), i8* getelementptr inbounds ([2 x i8], [2 x i8]* @63, i32 0, i32 0), i32 4, i32 1, i32 1, i32 4)
  call void @exit(i32 1)
  br label %ifcont119

else118:                                          ; preds = %ifcont116
  br label %ifcont119

ifcont119:                                        ; preds = %else118, %then117
  %145 = getelementptr [4 x i1], [4 x i1]* %b, i32 0, i32 3
  %146 = load i1, i1* %145, align 1
  %147 = xor i1 %146, true
  br i1 %147, label %then120, label %else121

then120:                                          ; preds = %ifcont119
  %148 = load i8*, i8** getelementptr inbounds (%string_descriptor, %string_descriptor* @string_const.44, i32 0, i32 0), align 8
  %149 = load i8*, i8** getelementptr inbounds (%string_descriptor, %string_descriptor* @string_const.46, i32 0, i32 0), align 8
  call void (i8*, ...) @_lcompilers_print_error(i8* getelementptr inbounds ([5 x i8], [5 x i8]* @65, i32 0, i32 0), i8* %148, i8* %149)
  call void @exit(i32 1)
  br label %ifcont122

else121:                                          ; preds = %ifcont119
  br label %ifcont122

ifcont122:                                        ; preds = %else121, %then120
  store i32 0, i32* %i1, align 4
  br label %loop.head123

loop.head123:                                     ; preds = %loop.end142, %ifcont122
  %150 = load i32, i32* %i1, align 4
  %151 = add i32 %150, 1
  %152 = icmp sle i32 %151, 2
  br i1 %152, label %loop.body124, label %loop.end143

loop.body124:                                     ; preds = %loop.head123
  %153 = load i32, i32* %i1, align 4
  %154 = add i32 %153, 1
  store i32 %154, i32* %i1, align 4
  store i32 0, i32* %j2, align 4
  br label %loop.head125

loop.head125:                                     ; preds = %ifcont141, %loop.body124
  %155 = load i32, i32* %j2, align 4
  %156 = add i32 %155, 1
  %157 = icmp sle i32 %156, 2
  br i1 %157, label %loop.body126, label %loop.end142

loop.body126:                                     ; preds = %loop.head125
  %158 = load i32, i32* %j2, align 4
  %159 = add i32 %158, 1
  store i32 %159, i32* %j2, align 4
  %160 = load i32, i32* %i1, align 4
  %161 = load i32, i32* %j2, align 4
  %162 = add i32 %160, %161
  %163 = load i32, i32* %i1, align 4
  %164 = load i32, i32* %j2, align 4
  %165 = add i32 %163, %164
  %166 = sdiv i32 %165, 2
  %167 = mul i32 2, %166
  %168 = sub i32 %162, %167
  %169 = icmp eq i32 %168, 1
  br i1 %169, label %then127, label %else134

then127:                                          ; preds = %loop.body126
  %170 = load i32, i32* %i1, align 4
  %171 = load i32, i32* %j2, align 4
  %172 = sub i32 %170, 1
  %173 = mul i32 1, %172
  %174 = add i32 0, %173
  %175 = icmp slt i32 %170, 1
  %176 = icmp sgt i32 %170, 2
  %177 = or i1 %175, %176
  br i1 %177, label %then128, label %else129

then128:                                          ; preds = %then127
  call void (i8*, ...) @_lcompilers_print_error(i8* getelementptr inbounds ([120 x i8], [120 x i8]* @67, i32 0, i32 0), i8* getelementptr inbounds ([2 x i8], [2 x i8]* @66, i32 0, i32 0), i32 %170, i32 1, i32 1, i32 2)
  call void @exit(i32 1)
  br label %ifcont130

else129:                                          ; preds = %then127
  br label %ifcont130

ifcont130:                                        ; preds = %else129, %then128
  %178 = sub i32 %171, 1
  %179 = mul i32 2, %178
  %180 = add i32 %174, %179
  %181 = icmp slt i32 %171, 1
  %182 = icmp sgt i32 %171, 2
  %183 = or i1 %181, %182
  br i1 %183, label %then131, label %else132

then131:                                          ; preds = %ifcont130
  call void (i8*, ...) @_lcompilers_print_error(i8* getelementptr inbounds ([120 x i8], [120 x i8]* @69, i32 0, i32 0), i8* getelementptr inbounds ([2 x i8], [2 x i8]* @68, i32 0, i32 0), i32 %171, i32 2, i32 1, i32 2)
  call void @exit(i32 1)
  br label %ifcont133

else132:                                          ; preds = %ifcont130
  br label %ifcont133

ifcont133:                                        ; preds = %else132, %then131
  %184 = getelementptr [4 x i1], [4 x i1]* %c, i32 0, i32 %180
  store i1 true, i1* %184, align 1
  br label %ifcont141

else134:                                          ; preds = %loop.body126
  %185 = load i32, i32* %i1, align 4
  %186 = load i32, i32* %j2, align 4
  %187 = sub i32 %185, 1
  %188 = mul i32 1, %187
  %189 = add i32 0, %188
  %190 = icmp slt i32 %185, 1
  %191 = icmp sgt i32 %185, 2
  %192 = or i1 %190, %191
  br i1 %192, label %then135, label %else136

then135:                                          ; preds = %else134
  call void (i8*, ...) @_lcompilers_print_error(i8* getelementptr inbounds ([120 x i8], [120 x i8]* @71, i32 0, i32 0), i8* getelementptr inbounds ([2 x i8], [2 x i8]* @70, i32 0, i32 0), i32 %185, i32 1, i32 1, i32 2)
  call void @exit(i32 1)
  br label %ifcont137

else136:                                          ; preds = %else134
  br label %ifcont137

ifcont137:                                        ; preds = %else136, %then135
  %193 = sub i32 %186, 1
  %194 = mul i32 2, %193
  %195 = add i32 %189, %194
  %196 = icmp slt i32 %186, 1
  %197 = icmp sgt i32 %186, 2
  %198 = or i1 %196, %197
  br i1 %198, label %then138, label %else139

then138:                                          ; preds = %ifcont137
  call void (i8*, ...) @_lcompilers_print_error(i8* getelementptr inbounds ([120 x i8], [120 x i8]* @73, i32 0, i32 0), i8* getelementptr inbounds ([2 x i8], [2 x i8]* @72, i32 0, i32 0), i32 %186, i32 2, i32 1, i32 2)
  call void @exit(i32 1)
  br label %ifcont140

else139:                                          ; preds = %ifcont137
  br label %ifcont140

ifcont140:                                        ; preds = %else139, %then138
  %199 = getelementptr [4 x i1], [4 x i1]* %c, i32 0, i32 %195
  store i1 false, i1* %199, align 1
  br label %ifcont141

ifcont141:                                        ; preds = %ifcont140, %ifcont133
  br label %loop.head125

loop.end142:                                      ; preds = %loop.head125
  br label %loop.head123

loop.end143:                                      ; preds = %loop.head123
  br i1 false, label %then144, label %else145

then144:                                          ; preds = %loop.end143
  call void (i8*, ...) @_lcompilers_print_error(i8* getelementptr inbounds ([120 x i8], [120 x i8]* @75, i32 0, i32 0), i8* getelementptr inbounds ([2 x i8], [2 x i8]* @74, i32 0, i32 0), i32 1, i32 1, i32 1, i32 2)
  call void @exit(i32 1)
  br label %ifcont146

else145:                                          ; preds = %loop.end143
  br label %ifcont146

ifcont146:                                        ; preds = %else145, %then144
  br i1 false, label %then147, label %else148

then147:                                          ; preds = %ifcont146
  call void (i8*, ...) @_lcompilers_print_error(i8* getelementptr inbounds ([120 x i8], [120 x i8]* @77, i32 0, i32 0), i8* getelementptr inbounds ([2 x i8], [2 x i8]* @76, i32 0, i32 0), i32 1, i32 2, i32 1, i32 2)
  call void @exit(i32 1)
  br label %ifcont149

else148:                                          ; preds = %ifcont146
  br label %ifcont149

ifcont149:                                        ; preds = %else148, %then147
  %200 = getelementptr [4 x i1], [4 x i1]* %c, i32 0, i32 0
  %201 = load i1, i1* %200, align 1
  br i1 %201, label %then150, label %else151

then150:                                          ; preds = %ifcont149
  %202 = load i8*, i8** getelementptr inbounds (%string_descriptor, %string_descriptor* @string_const.48, i32 0, i32 0), align 8
  %203 = load i8*, i8** getelementptr inbounds (%string_descriptor, %string_descriptor* @string_const.50, i32 0, i32 0), align 8
  call void (i8*, ...) @_lcompilers_print_error(i8* getelementptr inbounds ([5 x i8], [5 x i8]* @78, i32 0, i32 0), i8* %202, i8* %203)
  call void @exit(i32 1)
  br label %ifcont152

else151:                                          ; preds = %ifcont149
  br label %ifcont152

ifcont152:                                        ; preds = %else151, %then150
  br i1 false, label %then153, label %else154

then153:                                          ; preds = %ifcont152
  call void (i8*, ...) @_lcompilers_print_error(i8* getelementptr inbounds ([120 x i8], [120 x i8]* @80, i32 0, i32 0), i8* getelementptr inbounds ([2 x i8], [2 x i8]* @79, i32 0, i32 0), i32 1, i32 1, i32 1, i32 2)
  call void @exit(i32 1)
  br label %ifcont155

else154:                                          ; preds = %ifcont152
  br label %ifcont155

ifcont155:                                        ; preds = %else154, %then153
  br i1 false, label %then156, label %else157

then156:                                          ; preds = %ifcont155
  call void (i8*, ...) @_lcompilers_print_error(i8* getelementptr inbounds ([120 x i8], [120 x i8]* @82, i32 0, i32 0), i8* getelementptr inbounds ([2 x i8], [2 x i8]* @81, i32 0, i32 0), i32 2, i32 2, i32 1, i32 2)
  call void @exit(i32 1)
  br label %ifcont158

else157:                                          ; preds = %ifcont155
  br label %ifcont158

ifcont158:                                        ; preds = %else157, %then156
  %204 = getelementptr [4 x i1], [4 x i1]* %c, i32 0, i32 2
  %205 = load i1, i1* %204, align 1
  %206 = xor i1 %205, true
  br i1 %206, label %then159, label %else160

then159:                                          ; preds = %ifcont158
  %207 = load i8*, i8** getelementptr inbounds (%string_descriptor, %string_descriptor* @string_const.52, i32 0, i32 0), align 8
  %208 = load i8*, i8** getelementptr inbounds (%string_descriptor, %string_descriptor* @string_const.54, i32 0, i32 0), align 8
  call void (i8*, ...) @_lcompilers_print_error(i8* getelementptr inbounds ([5 x i8], [5 x i8]* @83, i32 0, i32 0), i8* %207, i8* %208)
  call void @exit(i32 1)
  br label %ifcont161

else160:                                          ; preds = %ifcont158
  br label %ifcont161

ifcont161:                                        ; preds = %else160, %then159
  br i1 false, label %then162, label %else163

then162:                                          ; preds = %ifcont161
  call void (i8*, ...) @_lcompilers_print_error(i8* getelementptr inbounds ([120 x i8], [120 x i8]* @85, i32 0, i32 0), i8* getelementptr inbounds ([2 x i8], [2 x i8]* @84, i32 0, i32 0), i32 2, i32 1, i32 1, i32 2)
  call void @exit(i32 1)
  br label %ifcont164

else163:                                          ; preds = %ifcont161
  br label %ifcont164

ifcont164:                                        ; preds = %else163, %then162
  br i1 false, label %then165, label %else166

then165:                                          ; preds = %ifcont164
  call void (i8*, ...) @_lcompilers_print_error(i8* getelementptr inbounds ([120 x i8], [120 x i8]* @87, i32 0, i32 0), i8* getelementptr inbounds ([2 x i8], [2 x i8]* @86, i32 0, i32 0), i32 1, i32 2, i32 1, i32 2)
  call void @exit(i32 1)
  br label %ifcont167

else166:                                          ; preds = %ifcont164
  br label %ifcont167

ifcont167:                                        ; preds = %else166, %then165
  %209 = getelementptr [4 x i1], [4 x i1]* %c, i32 0, i32 1
  %210 = load i1, i1* %209, align 1
  %211 = xor i1 %210, true
  br i1 %211, label %then168, label %else169

then168:                                          ; preds = %ifcont167
  %212 = load i8*, i8** getelementptr inbounds (%string_descriptor, %string_descriptor* @string_const.56, i32 0, i32 0), align 8
  %213 = load i8*, i8** getelementptr inbounds (%string_descriptor, %string_descriptor* @string_const.58, i32 0, i32 0), align 8
  call void (i8*, ...) @_lcompilers_print_error(i8* getelementptr inbounds ([5 x i8], [5 x i8]* @88, i32 0, i32 0), i8* %212, i8* %213)
  call void @exit(i32 1)
  br label %ifcont170

else169:                                          ; preds = %ifcont167
  br label %ifcont170

ifcont170:                                        ; preds = %else169, %then168
  br i1 false, label %then171, label %else172

then171:                                          ; preds = %ifcont170
  call void (i8*, ...) @_lcompilers_print_error(i8* getelementptr inbounds ([120 x i8], [120 x i8]* @90, i32 0, i32 0), i8* getelementptr inbounds ([2 x i8], [2 x i8]* @89, i32 0, i32 0), i32 2, i32 1, i32 1, i32 2)
  call void @exit(i32 1)
  br label %ifcont173

else172:                                          ; preds = %ifcont170
  br label %ifcont173

ifcont173:                                        ; preds = %else172, %then171
  br i1 false, label %then174, label %else175

then174:                                          ; preds = %ifcont173
  call void (i8*, ...) @_lcompilers_print_error(i8* getelementptr inbounds ([120 x i8], [120 x i8]* @92, i32 0, i32 0), i8* getelementptr inbounds ([2 x i8], [2 x i8]* @91, i32 0, i32 0), i32 2, i32 2, i32 1, i32 2)
  call void @exit(i32 1)
  br label %ifcont176

else175:                                          ; preds = %ifcont173
  br label %ifcont176

ifcont176:                                        ; preds = %else175, %then174
  %214 = getelementptr [4 x i1], [4 x i1]* %c, i32 0, i32 3
  %215 = load i1, i1* %214, align 1
  br i1 %215, label %then177, label %else178

then177:                                          ; preds = %ifcont176
  %216 = load i8*, i8** getelementptr inbounds (%string_descriptor, %string_descriptor* @string_const.60, i32 0, i32 0), align 8
  %217 = load i8*, i8** getelementptr inbounds (%string_descriptor, %string_descriptor* @string_const.62, i32 0, i32 0), align 8
  call void (i8*, ...) @_lcompilers_print_error(i8* getelementptr inbounds ([5 x i8], [5 x i8]* @93, i32 0, i32 0), i8* %216, i8* %217)
  call void @exit(i32 1)
  br label %ifcont179

else178:                                          ; preds = %ifcont176
  br label %ifcont179

ifcont179:                                        ; preds = %else178, %then177
  call void @_lpython_free_argv()
  br label %return

return:                                           ; preds = %ifcont179
  ret i32 0
}

declare void @_lpython_call_initial_functions(i32, i8**)

declare void @_lcompilers_print_error(i8*, ...)

declare void @exit(i32)

declare void @_lpython_free_argv()
